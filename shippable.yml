language: python

python:
  - 2.7

env:
  global:
    - AWS_ACCESS_KEY_ID=AKIAIP2K6LJVCSNWZD6Q
    - AWS_DEFAULT_REGION=ap-southeast-1b
    - secure: Jf3kjzcWWmITiYuYuzTUra8tqlzNjfTPdRg1Ld8lDfDXGOrKERvAI6jrc4ddckNiQhfFKDIYqqO7craltT6IE+QaxB+PXGJ51g3RkZfN0ZRJFeh24C0ilHWbwhk/MlUaJfYds1DLMk5v5B4wz6cMd+4UhNqufs+o8Vmb2HmufY8dgOukoJRAToKYtGz6bpaypME5f4J/OxcrFtGx3WnZVzR+VWEz1R0se8AXN3TmKi9kzMHM+F5juFVcSXNX8E1fvjvfBXE0L90FhzwKgnSFnCl5TiNp1++Jxg6jkLex8HUhuc/ajwf6OGW8SE5MOCpJxEt069kwQ2BatWcNmpZjyg==
    - CD_APP_NAME=ShippableCodeDeploy CD_BUCKET=codedeploy-sample CD_KEY=latest 
    - CD_DEPLOYMENT_GROUP=DemoFleet

before_install:
  - pip install awscli

install:
  - pip install -r requirements.txt

before_script: 
  - mkdir -p shippable/testresults
  - mkdir -p shippable/codecoverage

script:
  - nosetests test.py --with-xunit --xunit-file=shippable/testresults/nosetests.xml
  - which python && coverage run --branch test.py
  - which python && coverage xml -o shippable/codecoverage/coverage.xml test.py

after_success:
  # Use the following for GitHub-based deployments:
  # - aws deploy create-deployment --application-name $CD_APP_NAME --github-location repository=$REPO_NAME,commitId=$COMMIT --deployment-group-name $CD_DEPLOYMENT_GROUP | python scripts/wait_for_completion.py
  # This method uses S3 bucket to upload the build artifacts 
  - aws deploy push --application-name $CD_APP_NAME --s3-location s3://$CD_BUCKET/$CD_KEY --ignore-hidden-files
  - aws deploy create-deployment --application-name $CD_APP_NAME --s3-location bucket=$CD_BUCKET,key=$CD_KEY,bundleType=zip --deployment-group-name $CD_DEPLOYMENT_GROUP | python scripts/wait_for_completion.py
