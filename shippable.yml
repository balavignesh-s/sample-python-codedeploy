language: python

python:
  - 2.7

env:
  global:
    - AWS_ACCESS_KEY_ID=AKIAIP2K6LJVCSNWZD6Q
    - AWS_DEFAULT_REGION=us-west-2
    - secure: e1O4fPsks8LPrQCS968vgLmkADnVUil9stNUEFBYTu9ezhn/cdGI/ywdCkD49/IHfLhjASIVqd1DwuUENxnProD5zWEuwvlSEI83hvym4M1Rp6GSw4HWY8wPPM+tcL0jRhZphHrNDA8NM6q/Gh+mwAcjpXk4D2JG8pY0rqdDnXSrDTC5YlrB6MRcych2Mg1S3SwQ1tij4YZF0lGkFCk56dItalIZsXOexmvNxclpHjp2wFoj4sy+T0hp6Vi+FjNbQ1scI4MX/Mqq/1DCL7HyAEkAxe8YYchYMFKtlo9aE6da6ZEPdWnjMO25dTaz1lq5m6lNSFzVoV5QhhWZtW+Lvw==
    - CD_APP_NAME=ShippableCodeDeploy CD_BUCKET=codedeploy-sample CD_KEY=latest 
    - CD_DEPLOYMENT_GROUP=DemoFleet

before_install:
  - pip install awscli

install:
  - pip install -r requirements.txt

before_script: 
  - mkdir -p shippable/testresults
  - mkdir -p shippable/codecoverage

script:
  - nosetests test.py --with-xunit --xunit-file=shippable/testresults/nosetests.xml
  - which python && coverage run --branch test.py
  - which python && coverage xml -o shippable/codecoverage/coverage.xml test.py

after_success:
  # Use the following for GitHub-based deployments:
  # - aws deploy create-deployment --application-name $CD_APP_NAME --github-location repository=$REPO_NAME,commitId=$COMMIT --deployment-group-name $CD_DEPLOYMENT_GROUP | python scripts/wait_for_completion.py
  # This method uses S3 bucket to upload the build artifacts 
  - aws deploy push --application-name $CD_APP_NAME --s3-location s3://$CD_BUCKET/$CD_KEY --ignore-hidden-files
  - aws deploy create-deployment --application-name $CD_APP_NAME --s3-location bucket=$CD_BUCKET,key=$CD_KEY,bundleType=zip --deployment-group-name $CD_DEPLOYMENT_GROUP | python scripts/wait_for_completion.py
